# Generated by Django 5.1.7 on 2025-03-15 13:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kategori Adı')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('color', models.CharField(default='#3498db', help_text='Örn: #FF5733', max_length=7, verbose_name='Renk Kodu')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
            ],
            options={
                'verbose_name': 'Ders Kategorisi',
                'verbose_name_plural': 'Ders Kategorileri',
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Salon Adı')),
                ('location', models.CharField(max_length=100, verbose_name='Konum')),
                ('capacity', models.PositiveIntegerField(verbose_name='Kapasite')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('equipment', models.TextField(blank=True, null=True, verbose_name='Ekipmanlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
            ],
            options={
                'verbose_name': 'Ders Salonu',
                'verbose_name_plural': 'Ders Salonları',
            },
        ),
        migrations.CreateModel(
            name='ClassSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Bitiş Tarihi')),
                ('weekday', models.IntegerField(choices=[(0, 'Pazartesi'), (1, 'Salı'), (2, 'Çarşamba'), (3, 'Perşembe'), (4, 'Cuma'), (5, 'Cumartesi'), (6, 'Pazar')], verbose_name='Haftanın Günü')),
                ('start_time', models.TimeField(verbose_name='Başlangıç Saati')),
                ('end_time', models.TimeField(verbose_name='Bitiş Saati')),
                ('recurrence', models.CharField(choices=[('daily', 'Günlük'), ('weekly', 'Haftalık'), ('biweekly', 'İki Haftada Bir'), ('monthly', 'Aylık'), ('none', 'Tekrar Yok')], default='weekly', max_length=20, verbose_name='Tekrar')),
                ('max_participants', models.PositiveIntegerField(verbose_name='Maksimum Katılımcı Sayısı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_schedules', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_schedules', to='classes.classroom')),
            ],
            options={
                'verbose_name': 'Ders Programı',
                'verbose_name_plural': 'Ders Programları',
                'ordering': ['weekday', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='ClassSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Tarih')),
                ('start_time', models.TimeField(verbose_name='Başlangıç Saati')),
                ('end_time', models.TimeField(verbose_name='Bitiş Saati')),
                ('status', models.CharField(choices=[('scheduled', 'Planlandı'), ('in_progress', 'Devam Ediyor'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi')], default='scheduled', max_length=20, verbose_name='Durum')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('class_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_sessions', to='classes.classschedule')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_sessions', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_sessions', to='classes.classroom')),
            ],
            options={
                'verbose_name': 'Ders Seansı',
                'verbose_name_plural': 'Ders Seansları',
                'ordering': ['date', 'start_time'],
                'unique_together': {('class_schedule', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ClassTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ders Adı')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('duration_minutes', models.PositiveIntegerField(verbose_name='Süre (dakika)')),
                ('difficulty', models.CharField(choices=[('beginner', 'Başlangıç'), ('intermediate', 'Orta'), ('advanced', 'İleri'), ('all_levels', 'Tüm Seviyeler')], max_length=20, verbose_name='Zorluk Seviyesi')),
                ('benefits', models.TextField(blank=True, null=True, verbose_name='Faydaları')),
                ('requirements', models.TextField(blank=True, null=True, verbose_name='Gereksinimler')),
                ('image', models.ImageField(blank=True, null=True, upload_to='class_templates/', verbose_name='Görsel')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_templates', to='classes.classcategory')),
            ],
            options={
                'verbose_name': 'Ders Şablonu',
                'verbose_name_plural': 'Ders Şablonları',
            },
        ),
        migrations.AddField(
            model_name='classschedule',
            name='class_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='classes.classtemplate'),
        ),
        migrations.CreateModel(
            name='ClassParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(auto_now_add=True, verbose_name='Kayıt Zamanı')),
                ('attendance_status', models.CharField(choices=[('registered', 'Kayıtlı'), ('attended', 'Katıldı'), ('no_show', 'Gelmedi'), ('cancelled', 'İptal Etti')], default='registered', max_length=20, verbose_name='Katılım Durumu')),
                ('check_in_time', models.DateTimeField(blank=True, null=True, verbose_name='Giriş Zamanı')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_participations', to=settings.AUTH_USER_MODEL)),
                ('class_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='classes.classsession')),
            ],
            options={
                'verbose_name': 'Ders Katılımcısı',
                'verbose_name_plural': 'Ders Katılımcıları',
                'unique_together': {('class_session', 'member')},
            },
        ),
        migrations.CreateModel(
            name='ClassWaitingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(auto_now_add=True, verbose_name='Kayıt Zamanı')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('class_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waiting_list', to='classes.classsession')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_waiting_lists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ders Bekleme Listesi',
                'verbose_name_plural': 'Ders Bekleme Listeleri',
                'ordering': ['registration_time'],
                'unique_together': {('class_session', 'member')},
            },
        ),
    ]
