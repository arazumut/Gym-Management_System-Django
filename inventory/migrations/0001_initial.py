# Generated by Django 5.1.7 on 2025-03-15 13:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tedarikçi Adı')),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True, verbose_name='İletişim Kişisi')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Web Sitesi')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
            ],
            options={
                'verbose_name': 'Tedarikçi',
                'verbose_name_plural': 'Tedarikçiler',
            },
        ),
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kategori Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='inventory.inventorycategory')),
            ],
            options={
                'verbose_name': 'Envanter Kategorisi',
                'verbose_name_plural': 'Envanter Kategorileri',
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Öğe Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('sku', models.CharField(max_length=50, unique=True, verbose_name='Stok Kodu (SKU)')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Barkod')),
                ('quantity', models.PositiveIntegerField(verbose_name='Miktar')),
                ('min_quantity', models.PositiveIntegerField(default=0, verbose_name='Minimum Miktar')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Birim Fiyat')),
                ('condition', models.CharField(choices=[('new', 'Yeni'), ('good', 'İyi'), ('fair', 'Orta'), ('poor', 'Kötü'), ('broken', 'Bozuk')], default='new', max_length=20, verbose_name='Durum')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Konum')),
                ('image', models.ImageField(blank=True, null=True, upload_to='inventory_items/', verbose_name='Görsel')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.inventorycategory')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='inventory.supplier')),
            ],
            options={
                'verbose_name': 'Envanter Öğesi',
                'verbose_name_plural': 'Envanter Öğeleri',
            },
        ),
        migrations.CreateModel(
            name='EquipmentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_date', models.DateField(verbose_name='Zimmet Tarihi')),
                ('expected_return_date', models.DateField(blank=True, null=True, verbose_name='Beklenen İade Tarihi')),
                ('return_date', models.DateField(blank=True, null=True, verbose_name='İade Tarihi')),
                ('status', models.CharField(choices=[('assigned', 'Zimmetlendi'), ('returned', 'İade Edildi'), ('lost', 'Kayıp'), ('damaged', 'Hasarlı')], default='assigned', max_length=20, verbose_name='Durum')),
                ('condition_on_assignment', models.CharField(choices=[('new', 'Yeni'), ('good', 'İyi'), ('fair', 'Orta'), ('poor', 'Kötü'), ('broken', 'Bozuk')], max_length=20, verbose_name='Zimmet Anındaki Durum')),
                ('condition_on_return', models.CharField(blank=True, choices=[('new', 'Yeni'), ('good', 'İyi'), ('fair', 'Orta'), ('poor', 'Kötü'), ('broken', 'Bozuk')], max_length=20, null=True, verbose_name='İade Anındaki Durum')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_equipment', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_assignments', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='inventory.inventoryitem')),
            ],
            options={
                'verbose_name': 'Ekipman Zimmeti',
                'verbose_name_plural': 'Ekipman Zimmetleri',
                'ordering': ['-assigned_date'],
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Satın Alma'), ('sale', 'Satış'), ('return', 'İade'), ('adjustment', 'Düzeltme'), ('transfer', 'Transfer'), ('loss', 'Kayıp/Hasar')], max_length=20, verbose_name='İşlem Tipi')),
                ('quantity', models.IntegerField(verbose_name='Miktar')),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='İşlem Tarihi')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Birim Fiyat')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Toplam Fiyat')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Referans Numarası')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_transactions', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.inventoryitem')),
            ],
            options={
                'verbose_name': 'Envanter İşlemi',
                'verbose_name_plural': 'Envanter İşlemleri',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Başlık')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('frequency', models.CharField(choices=[('daily', 'Günlük'), ('weekly', 'Haftalık'), ('biweekly', 'İki Haftalık'), ('monthly', 'Aylık'), ('quarterly', 'Üç Aylık'), ('biannual', 'Altı Aylık'), ('annual', 'Yıllık'), ('custom', 'Özel')], max_length=20, verbose_name='Sıklık')),
                ('last_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Son Bakım Tarihi')),
                ('next_maintenance_date', models.DateField(verbose_name='Sonraki Bakım Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_schedules', to='inventory.inventoryitem')),
            ],
            options={
                'verbose_name': 'Bakım Programı',
                'verbose_name_plural': 'Bakım Programları',
                'ordering': ['next_maintenance_date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Başlık')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('maintenance_date', models.DateField(verbose_name='Bakım Tarihi')),
                ('status', models.CharField(choices=[('scheduled', 'Planlandı'), ('in_progress', 'Devam Ediyor'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi')], default='scheduled', max_length=20, verbose_name='Durum')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maliyet')),
                ('performed_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bakımı Yapan')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_logs', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_logs', to='inventory.inventoryitem')),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='inventory.maintenanceschedule')),
            ],
            options={
                'verbose_name': 'Bakım Kaydı',
                'verbose_name_plural': 'Bakım Kayıtları',
                'ordering': ['-maintenance_date'],
            },
        ),
    ]
