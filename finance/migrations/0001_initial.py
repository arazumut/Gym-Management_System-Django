# Generated by Django 5.1.7 on 2025-03-15 13:40

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('members', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ödeme Yöntemi Adı')),
                ('payment_type', models.CharField(choices=[('cash', 'Nakit'), ('credit_card', 'Kredi Kartı'), ('debit_card', 'Banka Kartı'), ('bank_transfer', 'Banka Havalesi'), ('online_payment', 'Online Ödeme'), ('check', 'Çek'), ('other', 'Diğer')], max_length=20, verbose_name='Ödeme Tipi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
            ],
            options={
                'verbose_name': 'Ödeme Yöntemi',
                'verbose_name_plural': 'Ödeme Yöntemleri',
            },
        ),
        migrations.CreateModel(
            name='FinancialReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('daily', 'Günlük'), ('weekly', 'Haftalık'), ('monthly', 'Aylık'), ('quarterly', 'Üç Aylık'), ('yearly', 'Yıllık'), ('custom', 'Özel')], max_length=20, verbose_name='Rapor Tipi')),
                ('title', models.CharField(max_length=255, verbose_name='Başlık')),
                ('start_date', models.DateField(verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateField(verbose_name='Bitiş Tarihi')),
                ('total_income', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Toplam Gelir')),
                ('total_expense', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Toplam Gider')),
                ('net_profit', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Net Kar')),
                ('report_data', models.JSONField(default=dict, verbose_name='Rapor Verileri')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Finansal Rapor',
                'verbose_name_plural': 'Finansal Raporlar',
                'ordering': ['-end_date'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True, verbose_name='Fatura Numarası')),
                ('issue_date', models.DateField(verbose_name='Düzenleme Tarihi')),
                ('due_date', models.DateField(verbose_name='Son Ödeme Tarihi')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('sent', 'Gönderildi'), ('paid', 'Ödendi'), ('overdue', 'Gecikmiş'), ('cancelled', 'İptal Edildi')], default='draft', max_length=20, verbose_name='Durum')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Ara Toplam')),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Vergi Tutarı')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='İndirim Tutarı')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Toplam Tutar')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_invoices', to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fatura',
                'verbose_name_plural': 'Faturalar',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Açıklama')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Miktar')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Birim Fiyat')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=18, max_digits=5, verbose_name='Vergi Oranı (%)')),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='İndirim Oranı (%)')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Ara Toplam')),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Vergi Tutarı')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='İndirim Tutarı')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Toplam Tutar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='finance.invoice')),
            ],
            options={
                'verbose_name': 'Fatura Kalemi',
                'verbose_name_plural': 'Fatura Kalemleri',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='İşlem ID')),
                ('transaction_type', models.CharField(choices=[('income', 'Gelir'), ('expense', 'Gider')], max_length=20, verbose_name='İşlem Tipi')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tutar')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('status', models.CharField(choices=[('pending', 'Beklemede'), ('completed', 'Tamamlandı'), ('failed', 'Başarısız'), ('refunded', 'İade Edildi'), ('cancelled', 'İptal Edildi')], default='pending', max_length=20, verbose_name='Durum')),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='İşlem Tarihi')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Referans Numarası')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_transactions', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='finance.paymentmethod')),
            ],
            options={
                'verbose_name': 'İşlem',
                'verbose_name_plural': 'İşlemler',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='MembershipPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Ödeme Tarihi')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tutar')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership_payments', to=settings.AUTH_USER_MODEL)),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='members.membership')),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='membership_payment', to='finance.transaction')),
            ],
            options={
                'verbose_name': 'Üyelik Ödemesi',
                'verbose_name_plural': 'Üyelik Ödemeleri',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_category', models.CharField(choices=[('rent', 'Kira'), ('utilities', 'Faturalar'), ('salaries', 'Maaşlar'), ('equipment', 'Ekipman'), ('maintenance', 'Bakım'), ('marketing', 'Pazarlama'), ('insurance', 'Sigorta'), ('taxes', 'Vergiler'), ('supplies', 'Sarf Malzemeleri'), ('other', 'Diğer')], max_length=20, verbose_name='Gider Kategorisi')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tutar')),
                ('expense_date', models.DateField(verbose_name='Gider Tarihi')),
                ('payment_due_date', models.DateField(blank=True, null=True, verbose_name='Son Ödeme Tarihi')),
                ('status', models.CharField(choices=[('pending', 'Beklemede'), ('approved', 'Onaylandı'), ('paid', 'Ödendi'), ('rejected', 'Reddedildi')], default='pending', max_length=20, verbose_name='Durum')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Ödeme Tarihi')),
                ('receipt', models.FileField(blank=True, null=True, upload_to='expense_receipts/', verbose_name='Fiş/Fatura')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_expenses', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_expenses', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='expenses', to='finance.paymentmethod')),
                ('transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expense', to='finance.transaction')),
            ],
            options={
                'verbose_name': 'Gider',
                'verbose_name_plural': 'Giderler',
                'ordering': ['-expense_date'],
            },
        ),
    ]
