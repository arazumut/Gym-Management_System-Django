# Generated by Django 5.1.7 on 2025-03-15 13:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Egzersiz Adı')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('muscle_group', models.CharField(choices=[('chest', 'Göğüs'), ('back', 'Sırt'), ('shoulders', 'Omuzlar'), ('arms', 'Kollar'), ('legs', 'Bacaklar'), ('core', 'Karın'), ('full_body', 'Tüm Vücut'), ('cardio', 'Kardiyo'), ('other', 'Diğer')], max_length=20, verbose_name='Kas Grubu')),
                ('instructions', models.TextField(verbose_name='Talimatlar')),
                ('video_url', models.URLField(blank=True, null=True, verbose_name='Video URL')),
                ('image', models.ImageField(blank=True, null=True, upload_to='exercises/', verbose_name='Görsel')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
            ],
            options={
                'verbose_name': 'Egzersiz',
                'verbose_name_plural': 'Egzersizler',
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', 'Kahvaltı'), ('lunch', 'Öğle Yemeği'), ('dinner', 'Akşam Yemeği'), ('snack', 'Ara Öğün'), ('pre_workout', 'Antrenman Öncesi'), ('post_workout', 'Antrenman Sonrası'), ('other', 'Diğer')], max_length=20, verbose_name='Öğün Tipi')),
                ('title', models.CharField(max_length=100, verbose_name='Başlık')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('time', models.TimeField(verbose_name='Saat')),
                ('calories', models.PositiveIntegerField(blank=True, null=True, verbose_name='Kalori')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
            ],
            options={
                'verbose_name': 'Öğün',
                'verbose_name_plural': 'Öğünler',
                'ordering': ['time'],
            },
        ),
        migrations.CreateModel(
            name='MealFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Yiyecek Adı')),
                ('quantity', models.CharField(max_length=50, verbose_name='Miktar')),
                ('calories', models.PositiveIntegerField(blank=True, null=True, verbose_name='Kalori')),
                ('protein', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Protein (g)')),
                ('carbs', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Karbonhidrat (g)')),
                ('fat', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Yağ (g)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foods', to='trainers.meal')),
            ],
            options={
                'verbose_name': 'Öğün Yiyeceği',
                'verbose_name_plural': 'Öğün Yiyecekleri',
            },
        ),
        migrations.CreateModel(
            name='NutritionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Plan Başlığı')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('goal', models.CharField(choices=[('weight_loss', 'Kilo Verme'), ('muscle_gain', 'Kas Kazanımı'), ('maintenance', 'Kilo Koruma'), ('health', 'Genel Sağlık'), ('performance', 'Performans'), ('custom', 'Özel')], max_length=20, verbose_name='Hedef')),
                ('start_date', models.DateField(verbose_name='Başlangıç tarihi')),
                ('end_date', models.DateField(verbose_name='Bitiş tarihi')),
                ('daily_calories', models.PositiveIntegerField(blank=True, null=True, verbose_name='Günlük Kalori')),
                ('protein_grams', models.PositiveIntegerField(blank=True, null=True, verbose_name='Protein (g)')),
                ('carbs_grams', models.PositiveIntegerField(blank=True, null=True, verbose_name='Karbonhidrat (g)')),
                ('fat_grams', models.PositiveIntegerField(blank=True, null=True, verbose_name='Yağ (g)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_nutrition_plans', to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_nutrition_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Beslenme Planı',
                'verbose_name_plural': 'Beslenme Planları',
            },
        ),
        migrations.AddField(
            model_name='meal',
            name='nutrition_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meals', to='trainers.nutritionplan'),
        ),
        migrations.CreateModel(
            name='TrainerAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Tarih')),
                ('start_time', models.TimeField(verbose_name='Başlangıç Saati')),
                ('end_time', models.TimeField(verbose_name='Bitiş Saati')),
                ('status', models.CharField(choices=[('scheduled', 'Planlandı'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi'), ('no_show', 'Gelmedi')], default='scheduled', max_length=20, verbose_name='Durum')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_appointments', to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_appointments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Eğitmen Randevusu',
                'verbose_name_plural': 'Eğitmen Randevuları',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='TrainerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(choices=[('fitness', 'Fitness'), ('yoga', 'Yoga'), ('pilates', 'Pilates'), ('cardio', 'Kardiyo'), ('strength', 'Güç Antrenmanı'), ('crossfit', 'CrossFit'), ('boxing', 'Boks'), ('swimming', 'Yüzme'), ('nutrition', 'Beslenme'), ('other', 'Diğer')], max_length=20, verbose_name='Uzmanlık Alanı')),
                ('secondary_specialization', models.CharField(blank=True, choices=[('fitness', 'Fitness'), ('yoga', 'Yoga'), ('pilates', 'Pilates'), ('cardio', 'Kardiyo'), ('strength', 'Güç Antrenmanı'), ('crossfit', 'CrossFit'), ('boxing', 'Boks'), ('swimming', 'Yüzme'), ('nutrition', 'Beslenme'), ('other', 'Diğer')], max_length=20, null=True, verbose_name='İkincil Uzmanlık Alanı')),
                ('experience_years', models.PositiveIntegerField(verbose_name='Deneyim (Yıl)')),
                ('bio', models.TextField(verbose_name='Biyografi')),
                ('certifications', models.TextField(blank=True, null=True, verbose_name='Sertifikalar')),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Saatlik Ücret')),
                ('available_hours', models.JSONField(default=dict, help_text='Eğitmenin müsait olduğu saatler', verbose_name='Müsait Saatler')),
                ('max_clients', models.PositiveIntegerField(default=10, verbose_name='Maksimum Danışan Sayısı')),
                ('is_available', models.BooleanField(default=True, verbose_name='Müsait')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('trainer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Eğitmen Profili',
                'verbose_name_plural': 'Eğitmen Profilleri',
            },
        ),
        migrations.CreateModel(
            name='TrainingProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Program Başlığı')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('program_type', models.CharField(choices=[('strength', 'Güç'), ('cardio', 'Kardiyo'), ('flexibility', 'Esneklik'), ('weight_loss', 'Kilo Verme'), ('muscle_gain', 'Kas Kazanımı'), ('endurance', 'Dayanıklılık'), ('rehabilitation', 'Rehabilitasyon'), ('general', 'Genel Fitness'), ('custom', 'Özel Program')], max_length=20, verbose_name='Program Tipi')),
                ('difficulty', models.CharField(choices=[('beginner', 'Başlangıç'), ('intermediate', 'Orta'), ('advanced', 'İleri'), ('expert', 'Uzman')], max_length=20, verbose_name='Zorluk Seviyesi')),
                ('start_date', models.DateField(verbose_name='Başlangıç tarihi')),
                ('end_date', models.DateField(verbose_name='Bitiş tarihi')),
                ('days_per_week', models.PositiveIntegerField(verbose_name='Haftalık Gün Sayısı')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_training_programs', to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_training_programs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Antrenman Programı',
                'verbose_name_plural': 'Antrenman Programları',
            },
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.PositiveIntegerField(choices=[(1, 'Pazartesi'), (2, 'Salı'), (3, 'Çarşamba'), (4, 'Perşembe'), (5, 'Cuma'), (6, 'Cumartesi'), (7, 'Pazar')], verbose_name='Haftanın Günü')),
                ('title', models.CharField(max_length=100, verbose_name='Seans Başlığı')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('duration_minutes', models.PositiveIntegerField(verbose_name='Süre (dakika)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='trainers.trainingprogram')),
            ],
            options={
                'verbose_name': 'Antrenman Seansı',
                'verbose_name_plural': 'Antrenman Seansları',
                'ordering': ['day_of_week'],
            },
        ),
        migrations.CreateModel(
            name='TrainerClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Başlangıç tarihi')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Bitiş tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_trainers', to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Eğitmen Danışanı',
                'verbose_name_plural': 'Eğitmen Danışanları',
                'unique_together': {('trainer', 'client')},
            },
        ),
        migrations.CreateModel(
            name='SessionExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='Sıra')),
                ('sets', models.PositiveIntegerField(verbose_name='Set Sayısı')),
                ('reps', models.CharField(max_length=50, verbose_name='Tekrar Sayısı')),
                ('rest_seconds', models.PositiveIntegerField(verbose_name='Dinlenme (saniye)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_exercises', to='trainers.exercise')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='trainers.trainingsession')),
            ],
            options={
                'verbose_name': 'Seans Egzersizi',
                'verbose_name_plural': 'Seans Egzersizleri',
                'ordering': ['order'],
                'unique_together': {('session', 'order')},
            },
        ),
    ]
