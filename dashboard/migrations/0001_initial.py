# Generated by Django 5.1.7 on 2025-03-15 13:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Widget Adı')),
                ('widget_type', models.CharField(choices=[('members_count', 'Üye Sayısı'), ('active_memberships', 'Aktif Üyelikler'), ('revenue_chart', 'Gelir Grafiği'), ('expense_chart', 'Gider Grafiği'), ('attendance_chart', 'Katılım Grafiği'), ('class_popularity', 'Ders Popülerliği'), ('trainer_performance', 'Eğitmen Performansı'), ('equipment_usage', 'Ekipman Kullanımı'), ('upcoming_classes', 'Yaklaşan Dersler'), ('expiring_memberships', 'Sona Eren Üyelikler'), ('low_stock_items', 'Azalan Stok Ürünleri'), ('custom', 'Özel Widget')], max_length=50, verbose_name='Widget Tipi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('config', models.JSONField(default=dict, verbose_name='Konfigürasyon')),
                ('position', models.PositiveSmallIntegerField(default=0, verbose_name='Pozisyon')),
                ('size', models.CharField(default='medium', max_length=20, verbose_name='Boyut')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgetları',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Başlık')),
                ('content', models.TextField(verbose_name='İçerik')),
                ('priority', models.CharField(choices=[('low', 'Düşük'), ('medium', 'Orta'), ('high', 'Yüksek'), ('urgent', 'Acil')], default='medium', max_length=20, verbose_name='Öncelik')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Bitiş Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_announcements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Duyuru',
                'verbose_name_plural': 'Duyurular',
                'ordering': ['-priority', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Başlık')),
                ('message', models.TextField(verbose_name='Mesaj')),
                ('notification_type', models.CharField(choices=[('info', 'Bilgi'), ('success', 'Başarı'), ('warning', 'Uyarı'), ('error', 'Hata')], default='info', max_length=20, verbose_name='Bildirim Tipi')),
                ('link', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bağlantı')),
                ('is_read', models.BooleanField(default=False, verbose_name='Okundu')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bildirim',
                'verbose_name_plural': 'Bildirimler',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Rapor Adı')),
                ('report_type', models.CharField(choices=[('membership', 'Üyelik Raporu'), ('financial', 'Finansal Rapor'), ('attendance', 'Katılım Raporu'), ('class', 'Ders Raporu'), ('trainer', 'Eğitmen Raporu'), ('inventory', 'Envanter Raporu'), ('staff', 'Personel Raporu'), ('custom', 'Özel Rapor')], max_length=20, verbose_name='Rapor Tipi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('period', models.CharField(choices=[('daily', 'Günlük'), ('weekly', 'Haftalık'), ('monthly', 'Aylık'), ('quarterly', 'Üç Aylık'), ('yearly', 'Yıllık'), ('custom', 'Özel')], default='monthly', max_length=20, verbose_name='Dönem')),
                ('start_date', models.DateField(verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateField(verbose_name='Bitiş Tarihi')),
                ('parameters', models.JSONField(blank=True, default=dict, verbose_name='Parametreler')),
                ('result_data', models.JSONField(blank=True, default=dict, verbose_name='Sonuç Verileri')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rapor',
                'verbose_name_plural': 'Raporlar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Başlık')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('priority', models.CharField(choices=[('low', 'Düşük'), ('medium', 'Orta'), ('high', 'Yüksek'), ('urgent', 'Acil')], default='medium', max_length=20, verbose_name='Öncelik')),
                ('status', models.CharField(choices=[('pending', 'Beklemede'), ('in_progress', 'Devam Ediyor'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi')], default='pending', max_length=20, verbose_name='Durum')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Son Tarih')),
                ('completed_date', models.DateTimeField(blank=True, null=True, verbose_name='Tamamlanma Tarihi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Görev',
                'verbose_name_plural': 'Görevler',
                'ordering': ['-priority', 'due_date'],
            },
        ),
        migrations.CreateModel(
            name='UserDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kullanıcı Dashboard',
                'verbose_name_plural': 'Kullanıcı Dashboardları',
            },
        ),
        migrations.CreateModel(
            name='UserDashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(default=0, verbose_name='Pozisyon')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Görünür')),
                ('custom_config', models.JSONField(blank=True, default=dict, verbose_name='Özel Konfigürasyon')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme tarihi')),
                ('user_dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to='dashboard.userdashboard')),
                ('widget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_widgets', to='dashboard.dashboardwidget')),
            ],
            options={
                'verbose_name': 'Kullanıcı Dashboard Widget',
                'verbose_name_plural': 'Kullanıcı Dashboard Widgetları',
                'ordering': ['position'],
                'unique_together': {('user_dashboard', 'widget')},
            },
        ),
        migrations.AddField(
            model_name='userdashboard',
            name='widgets',
            field=models.ManyToManyField(through='dashboard.UserDashboardWidget', to='dashboard.dashboardwidget'),
        ),
    ]
